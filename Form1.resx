<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>